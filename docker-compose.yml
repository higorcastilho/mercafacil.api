version: '3.8'
services:
  # --------- GATEWAY.API --------- 
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./tmp/mongo:/data/db
    restart: always

  mongo-seed:
    image: mongo-seed
    build: 
      context: ./gateway.api/db-seed
      dockerfile: Dockerfile
    depends_on:
      - mongo

  gateway.api:
    image: gateway.api
    build:
      context: ./gateway.api
      dockerfile: Dockerfile-dev
    container_name: gateway.api
    volumes:
      - ./tmp/npm:/root/.npm:z
      - ./gateway.api/src:/usr/src/app/src:z
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development
      - DBHOST=mongodb://mongo:27017
    depends_on:
      - mongo
    restart: always
  # --------- GATEWAY.API ---------

  # --------- MACAPA.API ---------
  mysql:
    image: mysql
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    expose:
      - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    ports:
      - 3306:3306
    volumes:
      - ./macapa.api/db:/docker-entrypoint-initdb.d/:ro
      - ./tmp/mysqldb:/var/lib/mysql:rw
    depends_on:
      - gateway.api
  macapa.api:
    image: macapa.api
    build:
      context: ./macapa.api
      dockerfile: Dockerfile
    command: bash -c 'while !</dev/tcp/mysql/3306; do sleep 1; done; npm install; npm start'
    container_name: macapa.api
    volumes:
      - ./tmp/npm:/root/.npm:z
      - ./macapa.api/src:/usr/src/app/src:z
    ports:
      - "6001:6001"
    environment:
      - MYSQL_USER=root
      - MYSQL_ROOT_PASSWORD=123456
      - DBHOST=mysql
      - DBPORT=3306
      - MYSQL_DATABASE=macapadb
      - CONNECT_TIMEOUT=60000
    depends_on:
      - mysql
    restart: always
  # --------- MACAPA.API ---------

  # --------- VAREJAO.API ---------
  postgres:
    image: postgres
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: varejaodb
    volumes:
      # - postgres-data:/var/lib/postgresql/data
      - ./varejao.api/db:/docker-entrypoint-initdb.d/:ro
      - ./tmp/postgres:/var/lib/postgresql/data:rw
    restart: unless-stopped
    depends_on:
      - gateway.api
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      restart: unless-stopped
    depends_on:
      - postgres

  varejao.api:
    image: varejao.api
    build:
      context: ./varejao.api
      dockerfile: Dockerfile
    # command: bash -c 'while !</dev/tcp/mysql/3306; do sleep 1; done; npm install; npm start'
    container_name: varejao.api
    volumes:
      - ./tmp/npm:/root/.npm:z
      - ./varejao.api/src:/usr/src/app/src:z
    ports:
      - "6002:6002"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DBHOST=postgres
      - DBPORT=5432
      - POSTGRES_DATABASE=varejaodb
    depends_on:
      - postgres
    restart: always
  # --------- VAREJAO.API ---------
